# coding: utf-8

"""
    ConnexPay Reporting API

    REST API for retrieving reporting data. Currently Daily Accounting data only.

    The version of the OpenAPI document: v1
    Created by: https://docs.connexpay.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from connex_pay_python_sdk import schemas  # noqa: F401


class AuthenticationObtain3DSecureAuthenticationRequest(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        required = {
            "DeviceGuid",
            "Amount",
            "BrowserData",
            "Card",
        }
        
        class properties:
        
            @staticmethod
            def Card() -> typing.Type['AuthenticationObtain3DSecureAuthenticationRequestCard']:
                return AuthenticationObtain3DSecureAuthenticationRequestCard
            DeviceGuid = schemas.StrSchema
        
            @staticmethod
            def BrowserData() -> typing.Type['AuthenticationObtain3DSecureAuthenticationRequestBrowserData']:
                return AuthenticationObtain3DSecureAuthenticationRequestBrowserData
            Amount = schemas.Float32Schema
            __annotations__ = {
                "Card": Card,
                "DeviceGuid": DeviceGuid,
                "BrowserData": BrowserData,
                "Amount": Amount,
            }
    
    DeviceGuid: MetaOapg.properties.DeviceGuid
    Amount: MetaOapg.properties.Amount
    BrowserData: 'AuthenticationObtain3DSecureAuthenticationRequestBrowserData'
    Card: 'AuthenticationObtain3DSecureAuthenticationRequestCard'
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Card"]) -> 'AuthenticationObtain3DSecureAuthenticationRequestCard': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["DeviceGuid"]) -> MetaOapg.properties.DeviceGuid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["BrowserData"]) -> 'AuthenticationObtain3DSecureAuthenticationRequestBrowserData': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Amount"]) -> MetaOapg.properties.Amount: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["Card", "DeviceGuid", "BrowserData", "Amount", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Card"]) -> 'AuthenticationObtain3DSecureAuthenticationRequestCard': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["DeviceGuid"]) -> MetaOapg.properties.DeviceGuid: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["BrowserData"]) -> 'AuthenticationObtain3DSecureAuthenticationRequestBrowserData': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Amount"]) -> MetaOapg.properties.Amount: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["Card", "DeviceGuid", "BrowserData", "Amount", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        DeviceGuid: typing.Union[MetaOapg.properties.DeviceGuid, str, ],
        Amount: typing.Union[MetaOapg.properties.Amount, decimal.Decimal, int, float, ],
        BrowserData: 'AuthenticationObtain3DSecureAuthenticationRequestBrowserData',
        Card: 'AuthenticationObtain3DSecureAuthenticationRequestCard',
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'AuthenticationObtain3DSecureAuthenticationRequest':
        return super().__new__(
            cls,
            *args,
            DeviceGuid=DeviceGuid,
            Amount=Amount,
            BrowserData=BrowserData,
            Card=Card,
            _configuration=_configuration,
            **kwargs,
        )

from connex_pay_python_sdk.model.authentication_obtain3_d_secure_authentication_request_browser_data import AuthenticationObtain3DSecureAuthenticationRequestBrowserData
from connex_pay_python_sdk.model.authentication_obtain3_d_secure_authentication_request_card import AuthenticationObtain3DSecureAuthenticationRequestCard
