# coding: utf-8

"""
    ConnexPay Reporting API

    REST API for retrieving reporting data. Currently Daily Accounting data only.

    The version of the OpenAPI document: v1
    Created by: https://docs.connexpay.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from connex_pay_python_sdk import schemas  # noqa: F401


class SaleCreateTransactionRequestBankAccount(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    Customer's Bank Account information. Mandatory if TenderType is ACH. This will be ignored if TenderType is Cash or Credit
    """


    class MetaOapg:
        required = {
            "RoutingNumber",
            "NameOnAccount",
            "AccountType",
            "AccountNumber",
        }
        
        class properties:
            AccountType = schemas.StrSchema
            RoutingNumber = schemas.StrSchema
            AccountNumber = schemas.StrSchema
            NameOnAccount = schemas.StrSchema
            AccountAndRoutingNumberToken = schemas.StrSchema
        
            @staticmethod
            def Customer() -> typing.Type['SaleCreateTransactionRequestBankAccountCustomer']:
                return SaleCreateTransactionRequestBankAccountCustomer
            __annotations__ = {
                "AccountType": AccountType,
                "RoutingNumber": RoutingNumber,
                "AccountNumber": AccountNumber,
                "NameOnAccount": NameOnAccount,
                "AccountAndRoutingNumberToken": AccountAndRoutingNumberToken,
                "Customer": Customer,
            }
    
    RoutingNumber: MetaOapg.properties.RoutingNumber
    NameOnAccount: MetaOapg.properties.NameOnAccount
    AccountType: MetaOapg.properties.AccountType
    AccountNumber: MetaOapg.properties.AccountNumber
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["AccountType"]) -> MetaOapg.properties.AccountType: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["RoutingNumber"]) -> MetaOapg.properties.RoutingNumber: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["AccountNumber"]) -> MetaOapg.properties.AccountNumber: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["NameOnAccount"]) -> MetaOapg.properties.NameOnAccount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["AccountAndRoutingNumberToken"]) -> MetaOapg.properties.AccountAndRoutingNumberToken: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Customer"]) -> 'SaleCreateTransactionRequestBankAccountCustomer': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["AccountType", "RoutingNumber", "AccountNumber", "NameOnAccount", "AccountAndRoutingNumberToken", "Customer", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["AccountType"]) -> MetaOapg.properties.AccountType: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["RoutingNumber"]) -> MetaOapg.properties.RoutingNumber: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["AccountNumber"]) -> MetaOapg.properties.AccountNumber: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["NameOnAccount"]) -> MetaOapg.properties.NameOnAccount: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["AccountAndRoutingNumberToken"]) -> typing.Union[MetaOapg.properties.AccountAndRoutingNumberToken, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Customer"]) -> typing.Union['SaleCreateTransactionRequestBankAccountCustomer', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["AccountType", "RoutingNumber", "AccountNumber", "NameOnAccount", "AccountAndRoutingNumberToken", "Customer", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        RoutingNumber: typing.Union[MetaOapg.properties.RoutingNumber, str, ],
        NameOnAccount: typing.Union[MetaOapg.properties.NameOnAccount, str, ],
        AccountType: typing.Union[MetaOapg.properties.AccountType, str, ],
        AccountNumber: typing.Union[MetaOapg.properties.AccountNumber, str, ],
        AccountAndRoutingNumberToken: typing.Union[MetaOapg.properties.AccountAndRoutingNumberToken, str, schemas.Unset] = schemas.unset,
        Customer: typing.Union['SaleCreateTransactionRequestBankAccountCustomer', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'SaleCreateTransactionRequestBankAccount':
        return super().__new__(
            cls,
            *args,
            RoutingNumber=RoutingNumber,
            NameOnAccount=NameOnAccount,
            AccountType=AccountType,
            AccountNumber=AccountNumber,
            AccountAndRoutingNumberToken=AccountAndRoutingNumberToken,
            Customer=Customer,
            _configuration=_configuration,
            **kwargs,
        )

from connex_pay_python_sdk.model.sale_create_transaction_request_bank_account_customer import SaleCreateTransactionRequestBankAccountCustomer
