# coding: utf-8

"""
    ConnexPay Reporting API

    REST API for retrieving reporting data. Currently Daily Accounting data only.

    The version of the OpenAPI document: v1
    Created by: https://docs.connexpay.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from connex_pay_python_sdk import schemas  # noqa: F401


class SettlementSearchVirtualCardSettlementsRequest(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        required = {
            "MerchantGuid",
        }
        
        class properties:
            MerchantGuid = schemas.StrSchema
            DateFrom = schemas.DateSchema
            DateTo = schemas.DateSchema
            PostedDateFrom = schemas.DateSchema
            PostedDateTo = schemas.DateSchema
            OrderNumber = schemas.StrSchema
            IssuedAmountFrom = schemas.Int64Schema
            IssuedAmountTo = schemas.Int64Schema
            IssuedCardLastFour = schemas.StrSchema
            PostedAmountFrom = schemas.Float32Schema
            PostedAmountTo = schemas.Float32Schema
            ExpirationDateFrom = schemas.DateSchema
            ExpirationDateTo = schemas.DateSchema
            __annotations__ = {
                "MerchantGuid": MerchantGuid,
                "DateFrom": DateFrom,
                "DateTo": DateTo,
                "PostedDateFrom": PostedDateFrom,
                "PostedDateTo": PostedDateTo,
                "OrderNumber": OrderNumber,
                "IssuedAmountFrom": IssuedAmountFrom,
                "IssuedAmountTo": IssuedAmountTo,
                "IssuedCardLastFour": IssuedCardLastFour,
                "PostedAmountFrom": PostedAmountFrom,
                "PostedAmountTo": PostedAmountTo,
                "ExpirationDateFrom": ExpirationDateFrom,
                "ExpirationDateTo": ExpirationDateTo,
            }
    
    MerchantGuid: MetaOapg.properties.MerchantGuid
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["MerchantGuid"]) -> MetaOapg.properties.MerchantGuid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["DateFrom"]) -> MetaOapg.properties.DateFrom: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["DateTo"]) -> MetaOapg.properties.DateTo: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["PostedDateFrom"]) -> MetaOapg.properties.PostedDateFrom: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["PostedDateTo"]) -> MetaOapg.properties.PostedDateTo: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["OrderNumber"]) -> MetaOapg.properties.OrderNumber: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["IssuedAmountFrom"]) -> MetaOapg.properties.IssuedAmountFrom: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["IssuedAmountTo"]) -> MetaOapg.properties.IssuedAmountTo: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["IssuedCardLastFour"]) -> MetaOapg.properties.IssuedCardLastFour: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["PostedAmountFrom"]) -> MetaOapg.properties.PostedAmountFrom: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["PostedAmountTo"]) -> MetaOapg.properties.PostedAmountTo: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ExpirationDateFrom"]) -> MetaOapg.properties.ExpirationDateFrom: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ExpirationDateTo"]) -> MetaOapg.properties.ExpirationDateTo: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["MerchantGuid", "DateFrom", "DateTo", "PostedDateFrom", "PostedDateTo", "OrderNumber", "IssuedAmountFrom", "IssuedAmountTo", "IssuedCardLastFour", "PostedAmountFrom", "PostedAmountTo", "ExpirationDateFrom", "ExpirationDateTo", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["MerchantGuid"]) -> MetaOapg.properties.MerchantGuid: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["DateFrom"]) -> typing.Union[MetaOapg.properties.DateFrom, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["DateTo"]) -> typing.Union[MetaOapg.properties.DateTo, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["PostedDateFrom"]) -> typing.Union[MetaOapg.properties.PostedDateFrom, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["PostedDateTo"]) -> typing.Union[MetaOapg.properties.PostedDateTo, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["OrderNumber"]) -> typing.Union[MetaOapg.properties.OrderNumber, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["IssuedAmountFrom"]) -> typing.Union[MetaOapg.properties.IssuedAmountFrom, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["IssuedAmountTo"]) -> typing.Union[MetaOapg.properties.IssuedAmountTo, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["IssuedCardLastFour"]) -> typing.Union[MetaOapg.properties.IssuedCardLastFour, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["PostedAmountFrom"]) -> typing.Union[MetaOapg.properties.PostedAmountFrom, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["PostedAmountTo"]) -> typing.Union[MetaOapg.properties.PostedAmountTo, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ExpirationDateFrom"]) -> typing.Union[MetaOapg.properties.ExpirationDateFrom, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ExpirationDateTo"]) -> typing.Union[MetaOapg.properties.ExpirationDateTo, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["MerchantGuid", "DateFrom", "DateTo", "PostedDateFrom", "PostedDateTo", "OrderNumber", "IssuedAmountFrom", "IssuedAmountTo", "IssuedCardLastFour", "PostedAmountFrom", "PostedAmountTo", "ExpirationDateFrom", "ExpirationDateTo", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        MerchantGuid: typing.Union[MetaOapg.properties.MerchantGuid, str, ],
        DateFrom: typing.Union[MetaOapg.properties.DateFrom, str, date, schemas.Unset] = schemas.unset,
        DateTo: typing.Union[MetaOapg.properties.DateTo, str, date, schemas.Unset] = schemas.unset,
        PostedDateFrom: typing.Union[MetaOapg.properties.PostedDateFrom, str, date, schemas.Unset] = schemas.unset,
        PostedDateTo: typing.Union[MetaOapg.properties.PostedDateTo, str, date, schemas.Unset] = schemas.unset,
        OrderNumber: typing.Union[MetaOapg.properties.OrderNumber, str, schemas.Unset] = schemas.unset,
        IssuedAmountFrom: typing.Union[MetaOapg.properties.IssuedAmountFrom, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        IssuedAmountTo: typing.Union[MetaOapg.properties.IssuedAmountTo, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        IssuedCardLastFour: typing.Union[MetaOapg.properties.IssuedCardLastFour, str, schemas.Unset] = schemas.unset,
        PostedAmountFrom: typing.Union[MetaOapg.properties.PostedAmountFrom, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        PostedAmountTo: typing.Union[MetaOapg.properties.PostedAmountTo, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        ExpirationDateFrom: typing.Union[MetaOapg.properties.ExpirationDateFrom, str, date, schemas.Unset] = schemas.unset,
        ExpirationDateTo: typing.Union[MetaOapg.properties.ExpirationDateTo, str, date, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'SettlementSearchVirtualCardSettlementsRequest':
        return super().__new__(
            cls,
            *args,
            MerchantGuid=MerchantGuid,
            DateFrom=DateFrom,
            DateTo=DateTo,
            PostedDateFrom=PostedDateFrom,
            PostedDateTo=PostedDateTo,
            OrderNumber=OrderNumber,
            IssuedAmountFrom=IssuedAmountFrom,
            IssuedAmountTo=IssuedAmountTo,
            IssuedCardLastFour=IssuedCardLastFour,
            PostedAmountFrom=PostedAmountFrom,
            PostedAmountTo=PostedAmountTo,
            ExpirationDateFrom=ExpirationDateFrom,
            ExpirationDateTo=ExpirationDateTo,
            _configuration=_configuration,
            **kwargs,
        )
