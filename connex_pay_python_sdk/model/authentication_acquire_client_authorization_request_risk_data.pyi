# coding: utf-8

"""
    ConnexPay Reporting API

    REST API for retrieving reporting data. Currently Daily Accounting data only.

    The version of the OpenAPI document: v1
    Created by: https://docs.connexpay.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from connex_pay_python_sdk import schemas  # noqa: F401


class AuthenticationAcquireClientAuthorizationRequestRiskData(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    Mandatory if TenderType is Credit or not set. This will be ignored if TenderType is Cash or ACH.
    """


    class MetaOapg:
        
        class properties:
            SessionId = schemas.StrSchema
            Name = schemas.StrSchema
            Gender = schemas.StrSchema
            DateOfBirth = schemas.StrSchema
            BillingPhoneNumber = schemas.StrSchema
            BillingAddress1 = schemas.StrSchema
            BillingAddress2 = schemas.StrSchema
            BillingCity = schemas.StrSchema
            BillingState = schemas.StrSchema
            BillingPostalCode = schemas.StrSchema
            BillingCountryCode = schemas.StrSchema
            Email = schemas.StrSchema
            ProductType = schemas.StrSchema
            ProductDescription = schemas.StrSchema
            ProductItem = schemas.StrSchema
            ProductQuantity = schemas.Int32Schema
            ProductPrice = schemas.Int32Schema
            OrderNumber = schemas.StrSchema
            SellerId = schemas.StrSchema
        
            @staticmethod
            def FlightData() -> typing.Type['AuthenticationAcquireClientAuthorizationRequestRiskDataFlightData']:
                return AuthenticationAcquireClientAuthorizationRequestRiskDataFlightData
        
            @staticmethod
            def FlightPassengers() -> typing.Type['AuthenticationAcquireClientAuthorizationRequestRiskDataFlightPassengers']:
                return AuthenticationAcquireClientAuthorizationRequestRiskDataFlightPassengers
            CustomParameters = schemas.DictSchema
            __annotations__ = {
                "SessionId": SessionId,
                "Name": Name,
                "Gender": Gender,
                "DateOfBirth": DateOfBirth,
                "BillingPhoneNumber": BillingPhoneNumber,
                "BillingAddress1": BillingAddress1,
                "BillingAddress2": BillingAddress2,
                "BillingCity": BillingCity,
                "BillingState": BillingState,
                "BillingPostalCode": BillingPostalCode,
                "BillingCountryCode": BillingCountryCode,
                "Email": Email,
                "ProductType": ProductType,
                "ProductDescription": ProductDescription,
                "ProductItem": ProductItem,
                "ProductQuantity": ProductQuantity,
                "ProductPrice": ProductPrice,
                "OrderNumber": OrderNumber,
                "SellerId": SellerId,
                "FlightData": FlightData,
                "FlightPassengers": FlightPassengers,
                "CustomParameters": CustomParameters,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["SessionId"]) -> MetaOapg.properties.SessionId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Name"]) -> MetaOapg.properties.Name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Gender"]) -> MetaOapg.properties.Gender: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["DateOfBirth"]) -> MetaOapg.properties.DateOfBirth: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["BillingPhoneNumber"]) -> MetaOapg.properties.BillingPhoneNumber: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["BillingAddress1"]) -> MetaOapg.properties.BillingAddress1: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["BillingAddress2"]) -> MetaOapg.properties.BillingAddress2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["BillingCity"]) -> MetaOapg.properties.BillingCity: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["BillingState"]) -> MetaOapg.properties.BillingState: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["BillingPostalCode"]) -> MetaOapg.properties.BillingPostalCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["BillingCountryCode"]) -> MetaOapg.properties.BillingCountryCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Email"]) -> MetaOapg.properties.Email: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ProductType"]) -> MetaOapg.properties.ProductType: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ProductDescription"]) -> MetaOapg.properties.ProductDescription: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ProductItem"]) -> MetaOapg.properties.ProductItem: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ProductQuantity"]) -> MetaOapg.properties.ProductQuantity: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ProductPrice"]) -> MetaOapg.properties.ProductPrice: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["OrderNumber"]) -> MetaOapg.properties.OrderNumber: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["SellerId"]) -> MetaOapg.properties.SellerId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["FlightData"]) -> 'AuthenticationAcquireClientAuthorizationRequestRiskDataFlightData': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["FlightPassengers"]) -> 'AuthenticationAcquireClientAuthorizationRequestRiskDataFlightPassengers': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["CustomParameters"]) -> MetaOapg.properties.CustomParameters: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["SessionId", "Name", "Gender", "DateOfBirth", "BillingPhoneNumber", "BillingAddress1", "BillingAddress2", "BillingCity", "BillingState", "BillingPostalCode", "BillingCountryCode", "Email", "ProductType", "ProductDescription", "ProductItem", "ProductQuantity", "ProductPrice", "OrderNumber", "SellerId", "FlightData", "FlightPassengers", "CustomParameters", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["SessionId"]) -> typing.Union[MetaOapg.properties.SessionId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Name"]) -> typing.Union[MetaOapg.properties.Name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Gender"]) -> typing.Union[MetaOapg.properties.Gender, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["DateOfBirth"]) -> typing.Union[MetaOapg.properties.DateOfBirth, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["BillingPhoneNumber"]) -> typing.Union[MetaOapg.properties.BillingPhoneNumber, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["BillingAddress1"]) -> typing.Union[MetaOapg.properties.BillingAddress1, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["BillingAddress2"]) -> typing.Union[MetaOapg.properties.BillingAddress2, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["BillingCity"]) -> typing.Union[MetaOapg.properties.BillingCity, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["BillingState"]) -> typing.Union[MetaOapg.properties.BillingState, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["BillingPostalCode"]) -> typing.Union[MetaOapg.properties.BillingPostalCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["BillingCountryCode"]) -> typing.Union[MetaOapg.properties.BillingCountryCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Email"]) -> typing.Union[MetaOapg.properties.Email, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ProductType"]) -> typing.Union[MetaOapg.properties.ProductType, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ProductDescription"]) -> typing.Union[MetaOapg.properties.ProductDescription, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ProductItem"]) -> typing.Union[MetaOapg.properties.ProductItem, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ProductQuantity"]) -> typing.Union[MetaOapg.properties.ProductQuantity, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ProductPrice"]) -> typing.Union[MetaOapg.properties.ProductPrice, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["OrderNumber"]) -> typing.Union[MetaOapg.properties.OrderNumber, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["SellerId"]) -> typing.Union[MetaOapg.properties.SellerId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["FlightData"]) -> typing.Union['AuthenticationAcquireClientAuthorizationRequestRiskDataFlightData', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["FlightPassengers"]) -> typing.Union['AuthenticationAcquireClientAuthorizationRequestRiskDataFlightPassengers', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["CustomParameters"]) -> typing.Union[MetaOapg.properties.CustomParameters, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["SessionId", "Name", "Gender", "DateOfBirth", "BillingPhoneNumber", "BillingAddress1", "BillingAddress2", "BillingCity", "BillingState", "BillingPostalCode", "BillingCountryCode", "Email", "ProductType", "ProductDescription", "ProductItem", "ProductQuantity", "ProductPrice", "OrderNumber", "SellerId", "FlightData", "FlightPassengers", "CustomParameters", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        SessionId: typing.Union[MetaOapg.properties.SessionId, str, schemas.Unset] = schemas.unset,
        Name: typing.Union[MetaOapg.properties.Name, str, schemas.Unset] = schemas.unset,
        Gender: typing.Union[MetaOapg.properties.Gender, str, schemas.Unset] = schemas.unset,
        DateOfBirth: typing.Union[MetaOapg.properties.DateOfBirth, str, schemas.Unset] = schemas.unset,
        BillingPhoneNumber: typing.Union[MetaOapg.properties.BillingPhoneNumber, str, schemas.Unset] = schemas.unset,
        BillingAddress1: typing.Union[MetaOapg.properties.BillingAddress1, str, schemas.Unset] = schemas.unset,
        BillingAddress2: typing.Union[MetaOapg.properties.BillingAddress2, str, schemas.Unset] = schemas.unset,
        BillingCity: typing.Union[MetaOapg.properties.BillingCity, str, schemas.Unset] = schemas.unset,
        BillingState: typing.Union[MetaOapg.properties.BillingState, str, schemas.Unset] = schemas.unset,
        BillingPostalCode: typing.Union[MetaOapg.properties.BillingPostalCode, str, schemas.Unset] = schemas.unset,
        BillingCountryCode: typing.Union[MetaOapg.properties.BillingCountryCode, str, schemas.Unset] = schemas.unset,
        Email: typing.Union[MetaOapg.properties.Email, str, schemas.Unset] = schemas.unset,
        ProductType: typing.Union[MetaOapg.properties.ProductType, str, schemas.Unset] = schemas.unset,
        ProductDescription: typing.Union[MetaOapg.properties.ProductDescription, str, schemas.Unset] = schemas.unset,
        ProductItem: typing.Union[MetaOapg.properties.ProductItem, str, schemas.Unset] = schemas.unset,
        ProductQuantity: typing.Union[MetaOapg.properties.ProductQuantity, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        ProductPrice: typing.Union[MetaOapg.properties.ProductPrice, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        OrderNumber: typing.Union[MetaOapg.properties.OrderNumber, str, schemas.Unset] = schemas.unset,
        SellerId: typing.Union[MetaOapg.properties.SellerId, str, schemas.Unset] = schemas.unset,
        FlightData: typing.Union['AuthenticationAcquireClientAuthorizationRequestRiskDataFlightData', schemas.Unset] = schemas.unset,
        FlightPassengers: typing.Union['AuthenticationAcquireClientAuthorizationRequestRiskDataFlightPassengers', schemas.Unset] = schemas.unset,
        CustomParameters: typing.Union[MetaOapg.properties.CustomParameters, dict, frozendict.frozendict, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'AuthenticationAcquireClientAuthorizationRequestRiskData':
        return super().__new__(
            cls,
            *args,
            SessionId=SessionId,
            Name=Name,
            Gender=Gender,
            DateOfBirth=DateOfBirth,
            BillingPhoneNumber=BillingPhoneNumber,
            BillingAddress1=BillingAddress1,
            BillingAddress2=BillingAddress2,
            BillingCity=BillingCity,
            BillingState=BillingState,
            BillingPostalCode=BillingPostalCode,
            BillingCountryCode=BillingCountryCode,
            Email=Email,
            ProductType=ProductType,
            ProductDescription=ProductDescription,
            ProductItem=ProductItem,
            ProductQuantity=ProductQuantity,
            ProductPrice=ProductPrice,
            OrderNumber=OrderNumber,
            SellerId=SellerId,
            FlightData=FlightData,
            FlightPassengers=FlightPassengers,
            CustomParameters=CustomParameters,
            _configuration=_configuration,
            **kwargs,
        )

from connex_pay_python_sdk.model.authentication_acquire_client_authorization_request_risk_data_flight_data import AuthenticationAcquireClientAuthorizationRequestRiskDataFlightData
from connex_pay_python_sdk.model.authentication_acquire_client_authorization_request_risk_data_flight_passengers import AuthenticationAcquireClientAuthorizationRequestRiskDataFlightPassengers
