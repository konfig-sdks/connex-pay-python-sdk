# coding: utf-8

"""
    ConnexPay Reporting API

    REST API for retrieving reporting data. Currently Daily Accounting data only.

    The version of the OpenAPI document: v1
    Created by: https://docs.connexpay.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from connex_pay_python_sdk import schemas  # noqa: F401


class ValidationSearchVerifyOperationRequest(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            MerchantGuid = schemas.StrSchema
            CardLastFour = schemas.StrSchema
            CardHolderName = schemas.StrSchema
            CardType = schemas.StrSchema
            TimeStampFrom = schemas.DateSchema
            TimeStampTo = schemas.DateSchema
            Status = schemas.StrSchema
            __annotations__ = {
                "MerchantGuid": MerchantGuid,
                "CardLastFour": CardLastFour,
                "CardHolderName": CardHolderName,
                "CardType": CardType,
                "TimeStampFrom": TimeStampFrom,
                "TimeStampTo": TimeStampTo,
                "Status": Status,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["MerchantGuid"]) -> MetaOapg.properties.MerchantGuid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["CardLastFour"]) -> MetaOapg.properties.CardLastFour: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["CardHolderName"]) -> MetaOapg.properties.CardHolderName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["CardType"]) -> MetaOapg.properties.CardType: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["TimeStampFrom"]) -> MetaOapg.properties.TimeStampFrom: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["TimeStampTo"]) -> MetaOapg.properties.TimeStampTo: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Status"]) -> MetaOapg.properties.Status: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["MerchantGuid", "CardLastFour", "CardHolderName", "CardType", "TimeStampFrom", "TimeStampTo", "Status", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["MerchantGuid"]) -> typing.Union[MetaOapg.properties.MerchantGuid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["CardLastFour"]) -> typing.Union[MetaOapg.properties.CardLastFour, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["CardHolderName"]) -> typing.Union[MetaOapg.properties.CardHolderName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["CardType"]) -> typing.Union[MetaOapg.properties.CardType, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["TimeStampFrom"]) -> typing.Union[MetaOapg.properties.TimeStampFrom, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["TimeStampTo"]) -> typing.Union[MetaOapg.properties.TimeStampTo, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Status"]) -> typing.Union[MetaOapg.properties.Status, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["MerchantGuid", "CardLastFour", "CardHolderName", "CardType", "TimeStampFrom", "TimeStampTo", "Status", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        MerchantGuid: typing.Union[MetaOapg.properties.MerchantGuid, str, schemas.Unset] = schemas.unset,
        CardLastFour: typing.Union[MetaOapg.properties.CardLastFour, str, schemas.Unset] = schemas.unset,
        CardHolderName: typing.Union[MetaOapg.properties.CardHolderName, str, schemas.Unset] = schemas.unset,
        CardType: typing.Union[MetaOapg.properties.CardType, str, schemas.Unset] = schemas.unset,
        TimeStampFrom: typing.Union[MetaOapg.properties.TimeStampFrom, str, date, schemas.Unset] = schemas.unset,
        TimeStampTo: typing.Union[MetaOapg.properties.TimeStampTo, str, date, schemas.Unset] = schemas.unset,
        Status: typing.Union[MetaOapg.properties.Status, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'ValidationSearchVerifyOperationRequest':
        return super().__new__(
            cls,
            *args,
            MerchantGuid=MerchantGuid,
            CardLastFour=CardLastFour,
            CardHolderName=CardHolderName,
            CardType=CardType,
            TimeStampFrom=TimeStampFrom,
            TimeStampTo=TimeStampTo,
            Status=Status,
            _configuration=_configuration,
            **kwargs,
        )
