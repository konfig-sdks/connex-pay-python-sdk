# coding: utf-8

"""
    ConnexPay Reporting API

    REST API for retrieving reporting data. Currently Daily Accounting data only.

    The version of the OpenAPI document: v1
    Created by: https://docs.connexpay.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from connex_pay_python_sdk import schemas  # noqa: F401


class AuthenticationObtain3DSecureAuthenticationResponse(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            guid = schemas.StrSchema
            status = schemas.StrSchema
            timeStamp = schemas.StrSchema
            deviceGuid = schemas.StrSchema
            amount = schemas.IntSchema
            threeDSStatus = schemas.StrSchema
            SecureData = schemas.StrSchema
            Cavv = schemas.StrSchema
            Version = schemas.StrSchema
            DirectoryServerTransactionID = schemas.StrSchema
            AcsTransactionId = schemas.StrSchema
            ECI = schemas.StrSchema
        
            @staticmethod
            def card() -> typing.Type['AuthenticationObtain3DSecureAuthenticationResponseCard']:
                return AuthenticationObtain3DSecureAuthenticationResponseCard
            exemptThreeDSRequest = schemas.BoolSchema
            exemptThreeDSPayment = schemas.BoolSchema
            __annotations__ = {
                "guid": guid,
                "status": status,
                "timeStamp": timeStamp,
                "deviceGuid": deviceGuid,
                "amount": amount,
                "threeDSStatus": threeDSStatus,
                "SecureData": SecureData,
                "Cavv": Cavv,
                "Version": Version,
                "DirectoryServerTransactionID": DirectoryServerTransactionID,
                "AcsTransactionId": AcsTransactionId,
                "ECI": ECI,
                "card": card,
                "exemptThreeDSRequest": exemptThreeDSRequest,
                "exemptThreeDSPayment": exemptThreeDSPayment,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["guid"]) -> MetaOapg.properties.guid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["status"]) -> MetaOapg.properties.status: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["timeStamp"]) -> MetaOapg.properties.timeStamp: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["deviceGuid"]) -> MetaOapg.properties.deviceGuid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["amount"]) -> MetaOapg.properties.amount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["threeDSStatus"]) -> MetaOapg.properties.threeDSStatus: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["SecureData"]) -> MetaOapg.properties.SecureData: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Cavv"]) -> MetaOapg.properties.Cavv: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Version"]) -> MetaOapg.properties.Version: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["DirectoryServerTransactionID"]) -> MetaOapg.properties.DirectoryServerTransactionID: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["AcsTransactionId"]) -> MetaOapg.properties.AcsTransactionId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ECI"]) -> MetaOapg.properties.ECI: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["card"]) -> 'AuthenticationObtain3DSecureAuthenticationResponseCard': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["exemptThreeDSRequest"]) -> MetaOapg.properties.exemptThreeDSRequest: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["exemptThreeDSPayment"]) -> MetaOapg.properties.exemptThreeDSPayment: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["guid", "status", "timeStamp", "deviceGuid", "amount", "threeDSStatus", "SecureData", "Cavv", "Version", "DirectoryServerTransactionID", "AcsTransactionId", "ECI", "card", "exemptThreeDSRequest", "exemptThreeDSPayment", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["guid"]) -> typing.Union[MetaOapg.properties.guid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["status"]) -> typing.Union[MetaOapg.properties.status, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["timeStamp"]) -> typing.Union[MetaOapg.properties.timeStamp, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["deviceGuid"]) -> typing.Union[MetaOapg.properties.deviceGuid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["amount"]) -> typing.Union[MetaOapg.properties.amount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["threeDSStatus"]) -> typing.Union[MetaOapg.properties.threeDSStatus, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["SecureData"]) -> typing.Union[MetaOapg.properties.SecureData, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Cavv"]) -> typing.Union[MetaOapg.properties.Cavv, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Version"]) -> typing.Union[MetaOapg.properties.Version, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["DirectoryServerTransactionID"]) -> typing.Union[MetaOapg.properties.DirectoryServerTransactionID, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["AcsTransactionId"]) -> typing.Union[MetaOapg.properties.AcsTransactionId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ECI"]) -> typing.Union[MetaOapg.properties.ECI, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["card"]) -> typing.Union['AuthenticationObtain3DSecureAuthenticationResponseCard', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["exemptThreeDSRequest"]) -> typing.Union[MetaOapg.properties.exemptThreeDSRequest, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["exemptThreeDSPayment"]) -> typing.Union[MetaOapg.properties.exemptThreeDSPayment, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["guid", "status", "timeStamp", "deviceGuid", "amount", "threeDSStatus", "SecureData", "Cavv", "Version", "DirectoryServerTransactionID", "AcsTransactionId", "ECI", "card", "exemptThreeDSRequest", "exemptThreeDSPayment", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        guid: typing.Union[MetaOapg.properties.guid, str, schemas.Unset] = schemas.unset,
        status: typing.Union[MetaOapg.properties.status, str, schemas.Unset] = schemas.unset,
        timeStamp: typing.Union[MetaOapg.properties.timeStamp, str, schemas.Unset] = schemas.unset,
        deviceGuid: typing.Union[MetaOapg.properties.deviceGuid, str, schemas.Unset] = schemas.unset,
        amount: typing.Union[MetaOapg.properties.amount, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        threeDSStatus: typing.Union[MetaOapg.properties.threeDSStatus, str, schemas.Unset] = schemas.unset,
        SecureData: typing.Union[MetaOapg.properties.SecureData, str, schemas.Unset] = schemas.unset,
        Cavv: typing.Union[MetaOapg.properties.Cavv, str, schemas.Unset] = schemas.unset,
        Version: typing.Union[MetaOapg.properties.Version, str, schemas.Unset] = schemas.unset,
        DirectoryServerTransactionID: typing.Union[MetaOapg.properties.DirectoryServerTransactionID, str, schemas.Unset] = schemas.unset,
        AcsTransactionId: typing.Union[MetaOapg.properties.AcsTransactionId, str, schemas.Unset] = schemas.unset,
        ECI: typing.Union[MetaOapg.properties.ECI, str, schemas.Unset] = schemas.unset,
        card: typing.Union['AuthenticationObtain3DSecureAuthenticationResponseCard', schemas.Unset] = schemas.unset,
        exemptThreeDSRequest: typing.Union[MetaOapg.properties.exemptThreeDSRequest, bool, schemas.Unset] = schemas.unset,
        exemptThreeDSPayment: typing.Union[MetaOapg.properties.exemptThreeDSPayment, bool, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'AuthenticationObtain3DSecureAuthenticationResponse':
        return super().__new__(
            cls,
            *args,
            guid=guid,
            status=status,
            timeStamp=timeStamp,
            deviceGuid=deviceGuid,
            amount=amount,
            threeDSStatus=threeDSStatus,
            SecureData=SecureData,
            Cavv=Cavv,
            Version=Version,
            DirectoryServerTransactionID=DirectoryServerTransactionID,
            AcsTransactionId=AcsTransactionId,
            ECI=ECI,
            card=card,
            exemptThreeDSRequest=exemptThreeDSRequest,
            exemptThreeDSPayment=exemptThreeDSPayment,
            _configuration=_configuration,
            **kwargs,
        )

from connex_pay_python_sdk.model.authentication_obtain3_d_secure_authentication_response_card import AuthenticationObtain3DSecureAuthenticationResponseCard
